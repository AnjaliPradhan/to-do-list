/* Base styles from your original CSS, with modifications and additions */
body {
    font-family: 'Inter', sans-serif; /* Using Inter font */
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    margin: 0;
    /* Gradient background: Sky Blue to Red */
    background: linear-gradient(to right, #87CEEB, #FF6347);
    color: #333; /* Default text color */
    transition: background-color 0.3s ease; /* Smooth transition for background */
}

.container {
    background-color: #fff;
    padding: 30px; /* Increased padding */
    border-radius: 12px; /* More rounded corners */
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15); /* Stronger shadow */
    width: 95%; /* Responsive width */
    max-width: 600px; /* Increased max-width for more content */
    box-sizing: border-box;
    margin: 20px; /* Add margin for smaller screens */
    transition: transform 0.3s ease, box-shadow 0.3s ease; /* Smooth transitions */
}

.container:hover {
    transform: translateY(-5px); /* Subtle lift on hover */
    box-shadow: 0 12px 30px rgba(0, 0, 0, 0.2);
}

h1 {
    text-align: center;
    color: #2c3e50; /* Darker heading color */
    margin-bottom: 30px; /* More space below heading */
    font-size: 2.2em; /* Larger heading */
    font-weight: 700;
}

.input-section {
    display: flex;
    flex-wrap: wrap; /* Allow wrapping on smaller screens */
    gap: 10px; /* Space between input and button */
    margin-bottom: 25px;
}

input[type="text"],
.edit-input,
input[type="file"],
textarea,
select {
    flex-grow: 1;
    padding: 14px; /* Increased padding */
    border: 1px solid #ddd;
    border-radius: 8px; /* More rounded */
    font-size: 1.05em;
    outline: none;
    transition: border-color 0.2s ease, box-shadow 0.2s ease;
    width: 100%; /* Full width within flex item */
    box-sizing: border-box;
}

input[type="text"]:focus,
.edit-input:focus,
textarea:focus,
select:focus {
    border-color: #007bff;
    box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.25); /* Stronger focus shadow */
}

button {
    padding: 12px 22px; /* More padding for main buttons */
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 8px; /* More rounded */
    cursor: pointer;
    font-size: 1.05em;
    font-weight: 600;
    transition: background-color 0.2s ease, transform 0.1s ease, box-shadow 0.2s ease;
    white-space: nowrap; /* Prevent button text from wrapping */
}

button:hover {
    background-color: #0056b3;
    transform: translateY(-2px); /* Subtle lift on hover */
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
}

button:active {
    transform: translateY(0); /* Press effect */
    box-shadow: none;
}

ul {
    list-style: none;
    padding: 0;
    margin: 0;
}

li {
    background-color: #f9f9f9;
    margin-bottom: 15px; /* More space between list items */
    padding: 18px; /* Increased padding */
    border-radius: 10px; /* Rounded corners for list items */
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08); /* Subtle shadow */
    transition: background-color 0.3s ease, box-shadow 0.3s ease;
}

li:hover {
    background-color: #f0f0f0;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.12);
}

li.completed {
    background-color: #e6ffe6; /* Light green for completed tasks */
    opacity: 0.8;
}

li.completed .task-text {
    text-decoration: line-through;
    color: #888;
}

.task-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 15px;
    flex-wrap: wrap; /* Allow wrapping */
    gap: 10px; /* Space between elements in header */
}

.task-text {
    flex-grow: 1;
    font-size: 1.15em; /* Larger task text */
    font-weight: 600;
    color: #333;
    word-break: break-word;
    padding-right: 10px;
}

.actions-div {
    display: flex;
    gap: 8px; /* Space between action buttons */
    flex-wrap: wrap; /* Allow wrapping */
}

li button {
    padding: 8px 14px; /* Smaller padding for task buttons */
    font-size: 0.9em;
    border-radius: 6px;
    margin-left: 0; /* Override general button margin */
    font-weight: 500;
}

li button.complete-btn {
    background-color: #28a745; /* Green */
}
li button.complete-btn:hover {
    background-color: #218838;
}

li button.edit-btn {
    background-color: #ffc107; /* Yellow */
    color: #333;
}
li button.edit-btn:hover {
    background-color: #e0a800;
}

li button.delete-btn {
    background-color: #dc3545; /* Red */
}
li button.delete-btn:hover {
    background-color: #c82333;
}

li button.view-details-btn,
li button.view-activities-btn {
    background-color: #6c757d; /* Gray for details/activities */
}
li button.view-details-btn:hover,
li button.view-activities-btn:hover {
    background-color: #5a6268;
}

.task-details-section,
.task-activities-section {
    margin-top: 15px;
    padding-top: 15px;
    border-top: 1px dashed #eee;
    display: none; /* Hidden by default */
    flex-direction: column;
    gap: 10px;
}

.task-details-section.active,
.task-activities-section.active {
    display: flex; /* Show when active */
}

.detail-item, .comment-item {
    display: flex;
    align-items: center;
    gap: 10px;
    font-size: 0.95em;
    color: #555;
    background-color: #f0f8ff; /* Light blue background for details */
    padding: 8px 12px;
    border-radius: 6px;
    border: 1px solid #e0f0ff;
}

.detail-item strong {
    color: #2c3e50;
    min-width: 80px; /* Align labels */
}

.comment-item {
    background-color: #f7f7f7;
    border: 1px solid #eee;
    flex-direction: column; /* Stack comment text and time */
    align-items: flex-start;
    padding: 10px 12px;
}
.comment-item span {
    word-break: break-word;
}
.comment-item small {
    font-size: 0.8em;
    color: #999;
    margin-top: 5px;
}

.comment-input-section {
    display: flex;
    flex-direction: column;
    gap: 10px;
    margin-top: 10px;
}

.comment-input-section textarea {
    min-height: 60px;
    resize: vertical;
}

.timer-controls {
    display: flex;
    gap: 5px;
    align-items: center;
    margin-top: 5px;
}
.timer-controls button {
    padding: 5px 10px;
    font-size: 0.8em;
    border-radius: 4px;
}
.timer-display {
    font-weight: bold;
    color: #007bff;
    min-width: 70px;
    text-align: center;
}

/* Filter Section Styling */
.filter-section {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    margin-bottom: 25px;
    padding: 15px;
    background-color: #f0f0f0;
    border-radius: 8px;
    border: 1px solid #e0e0e0;
}

.filter-section label {
    font-weight: 600;
    color: #555;
    align-self: center; /* Align label vertically in flex container */
}

.filter-section select,
.filter-section input[type="text"] {
    flex-grow: 1;
    padding: 10px;
    border-radius: 6px;
    font-size: 0.95em;
}

.filter-section button {
    padding: 10px 15px;
    font-size: 0.95em;
    background-color: #6c757d; /* Gray for filter buttons */
}

.filter-section button:hover {
    background-color: #5a6268;
}

/* Responsive adjustments */
@media (max-width: 768px) {
    .container {
        padding: 20px;
        margin: 15px;
    }

    h1 {
        font-size: 1.8em;
        margin-bottom: 20px;
    }

    .input-section,
    .filter-section {
        flex-direction: column; /* Stack input and button */
        gap: 15px;
    }

    button {
        width: 100%; /* Full width button */
        margin-left: 0;
    }

    .task-header {
        flex-direction: column; /* Stack task text and buttons */
        align-items: flex-start;
        gap: 15px;
    }

    .actions-div {
        width: 100%; /* Make action buttons take full width */
        justify-content: flex-start;
    }

    li button {
        width: auto; /* Allow task buttons to size naturally */
    }

    .detail-item {
        flex-direction: column;
        align-items: flex-start;
    }
    .detail-item strong {
        min-width: unset;
    }
}

